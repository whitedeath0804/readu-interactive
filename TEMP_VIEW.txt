import React, { useMemo, useState } from 'react';
import {
  ImageBackground,
  KeyboardAvoidingView,
  Keyboard,
  Platform,
  Pressable,
  ScrollView,
  StyleSheet,
  Text,
  TouchableWithoutFeedback,
  View,
} from 'react-native';
import { StatusBar } from 'expo-status-bar';
import { LinearGradient } from 'expo-linear-gradient';
import { SafeAreaView, useSafeAreaInsets } from 'react-native-safe-area-context';
import { useRouter } from 'expo-router';

import { Colors } from '@/constants/Colors';
import { Typo } from '@/constants/Typography';
import CloseButton from '@/components/ui/CloseButton';
import SegmentedPicker from '@/components/ui/SegmentedPicker';
import Input from '@/components/ui/Input';
import PasswordInput from '@/components/ui/PasswordInput';
import Checkbox from '@/components/ui/Checkbox';
import PrimaryButton from '@/components/ui/PrimaryButton';
import PlanCard from '@/components/ui/PlanCard';

export default function SignIn() {
  const router = useRouter();
  const insets = useSafeAreaInsets();

  // tabs: 0 details, 1 plan
  const [tab, setTab] = useState(0);

  // form state
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [phone, setPhone] = useState('');
  const [password, setPassword] = useState('');
  const [remember, setRemember] = useState(false);
  const [agree, setAgree] = useState(false);

  const emailOk = /.+@.+\..+/.test(email);
  const phoneOk = phone.trim().length >= 7; // basic len check
  const canNext = useMemo(() => name.trim().length > 1 && emailOk && phoneOk && password.length >= 8 && agree, [name, emailOk, phoneOk, password, agree]);

  const onRegister = () => setTab(1);
  const onBack = () => router.back();
  const gotoApp = () => router.replace('/(tabs)');

  return (
    <View style={styles.root}>
      <KeyboardAvoidingView
        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
        // a bit more offset so the first input never hides under the notch/header
        keyboardVerticalOffset={insets.top + 24}
        style={{ flex: 1 }}
      >
      <StatusBar style="light" />
      <ImageBackground
        source={require('../../assets/images/onboarding-bg.jpg')}
        style={StyleSheet.absoluteFill}
        resizeMode="cover"
      />
      <LinearGradient
        colors={["rgba(0,0,0,0.1)", "rgba(0,0,0,0.35)", "rgba(0,0,0,0.75)"]}
        style={StyleSheet.absoluteFill}
      />

      <SafeAreaView style={styles.safe}>
        <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>
            <ScrollView
              style={{ flex: 1 }}
              contentContainerStyle={[styles.scrollContent, { paddingBottom: Math.max(insets.bottom, 16) }]}
              keyboardDismissMode="on-drag"
              keyboardShouldPersistTaps="handled"
            >
              {/* Header */}
              <View style={styles.headerRow}>
                <CloseButton variant="back" size="sm" onPress={onBack} accessibilityLabel="Back" />
                <Text style={[Typo.h2, styles.headerTitle, { color: Colors.text }]}>Register</Text>
              </View>
              <Text style={[Typo.body3Regular, { color: Colors.textSecondary }]}>Join us! Create your account below.</Text>

              {/* Segmented */}
              <View style={{ marginTop: 16 }}>
                <SegmentedPicker
                  segments={["Log in details", "Pick a plan"]}
                  index={tab}
                  onChange={setTab}
                />
              </View>

              {tab === 0 ? (
                <View style={{ gap: 14, marginTop: 16 }}>
                  <Input
                    placeholder="име"
                    value={name}
                    onChangeText={setName}
                    returnKeyType="next"
                  />
                  <Input
                    placeholder="Email"
                    value={email}
                    onChangeText={setEmail}
                    autoCapitalize="none"
                    keyboardType="email-address"
                    textContentType="emailAddress"
                    returnKeyType="next"
                  />
                  <Input
                    placeholder="Телефонен номер"
                    value={phone}
                    onChangeText={setPhone}
                    keyboardType="phone-pad"
                    textContentType="telephoneNumber"
                    returnKeyType="next"
                  />
                  <PasswordInput
                    placeholder="Парола"
                    value={password}
                    onChangeText={setPassword}
                  />

                  <View style={styles.rowBetween}>
                    <Checkbox size="sm" label="Запомни" checked={remember} onChange={setRemember} />
                  </View>

                  <View style={styles.rowInline}>
                    <Checkbox size="sm" checked={agree} onChange={setAgree} label="Съгласявам се" />
                    <Pressable onPress={() => console.log('Terms')}>
                      <Text style={[Typo.body2, { color: Colors.primary }]}>политиките</Text>
                    </Pressable>
                  </View>

                  <PrimaryButton
                    label="Next"
                    size="lg"
                    disabled={!canNext}
                    fullWidth
                    onPress={onRegister}
                    style={{ marginTop: 2 }}
                  />

                  <View style={styles.centerRow}>
                    <Text style={[Typo.body3Regular, { color: Colors.textSecondary }]}>Already have an account? </Text>
                    <Pressable onPress={() => router.push('/(auth)/LogIn')}>
                      <Text style={[Typo.body3, { color: Colors.primary }]}>Log in</Text>
                    </Pressable>
                  </View>
                </View>
              ) : (
                <View style={{ gap: 16, marginTop: 16 }}>
                  <PlanCard
                    title="Free"
                    price="00.00 BGM"
                    features={[
                      { text: 'Full access to video and exercise library', included: true },
                      { text: 'Limited access to AI chatbots', included: false },
                      { text: 'Limited access to Languages (C1 only)', included: false },
                    ]}
                    onPress={gotoApp}
                  />

                  <PlanCard
                    title="Premium"
                    price="22.89 BGM"
                    features={[
                      { text: 'Full access to video and exercise library', included: true },
                      { text: 'Greater access to AI chatbots', included: true },
                      { text: 'Access to all languages', included: true },
                    ]}
                    highlight
                    onPress={gotoApp}
                    style={{ marginBottom: 8 }}
                  />
                </View>
              )}
            </ScrollView>
        </TouchableWithoutFeedback>
      </SafeAreaView>
      </KeyboardAvoidingView>
    </View>
  );
}

const styles = StyleSheet.create({
  root: { flex: 1, backgroundColor: Colors.background },
  safe: { flex: 1, paddingHorizontal: 20, paddingBottom: 12 },
  headerRow: { flexDirection: 'row', alignItems: 'center', gap: 12, marginTop: 4 },
  headerTitle: {},
  scrollContent: { paddingBottom: 24 },
  rowBetween: { flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' },
  centerRow: { flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 6 },
  rowInline: { flexDirection: 'row', alignItems: 'center', flexWrap: 'wrap', gap: 4 },
});

