// app/(tabs)/lessons/[lessonsId].tsx
import React, { useEffect, useMemo, useState } from "react";
import {
  Pressable,
  ScrollView,
  StyleSheet,
  Text,
  View,
} from "react-native";
import { useLocalSearchParams, useRouter } from "expo-router";
import { SafeAreaView, useSafeAreaInsets } from "react-native-safe-area-context";
import { LinearGradient } from "expo-linear-gradient";

import Markdown from "react-native-markdown-display";
import MathView from "react-native-math-view";

import { Colors } from "@/constants/Colors";
import { Typo } from "@/constants/Typography";
import SegmentedPicker from "@/components/ui/SegmentedPicker";
import PrimaryButton from "@/components/ui/PrimaryButton";
import SecondaryButton from "@/components/ui/SecondaryButton";

// -------- –ü—Ä–∏–º–µ—Ä–Ω–∏ –¥–∞–Ω–Ω–∏ –∑–∞ —É—Ä–æ–∫ (–±–µ–∑ –≤–∏–¥–µ–æ –∏ –±–µ–∑ .md —Ñ–∞–π–ª) --------
type Exercise = { question: string; options: string[]; correct: number };
type LessonCfg = {
  title: string;
  exercises: Exercise[];
};

const LESSONS: Record<string, LessonCfg> = {
  Calc_Ep23: {
    title: "–ö–∞–ª–∫—É–ª—É—Å –ï–ø. 23 ‚Äî –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏ —Ñ–æ—Ä–º–∏ –∏ –ø—Ä–∞–≤–∏–ª–æ –Ω–∞ –õ'–û–ø–∏—Ç–∞–ª",
    exercises: [
      {
        question: "–ö–æ–ª–∫–æ –µ –≥—Ä–∞–Ω–∏—Ü–∞—Ç–∞: (x¬≤ ‚àí 1)/(x ‚àí 1) –ø—Ä–∏ x ‚Üí 1?",
        options: ["0", "1", "2", "‚àû"],
        correct: 2, // 2
      },
      {
        question: "–ö–æ–µ —Ç–≤—ä—Ä–¥–µ–Ω–∏–µ –µ –≤—è—Ä–Ω–æ –∑–∞ lim_{x‚Üí0} sin x / x ?",
        options: ["–†–∞–≤–Ω–∞ –µ –Ω–∞ 0", "–ù–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞", "–†–∞–≤–Ω–∞ –µ –Ω–∞ 1", "–†–∞–≤–Ω–∞ –µ –Ω–∞ 2"],
        correct: 2,
      },
    ],
  },
  limits1: {
    title: "–ö–∞–∫–≤–æ —Å–∞ –≥—Ä–∞–Ω–∏—Ü–∏?",
    exercises: [
      {
        question: "–ù–∞–º–µ—Ä–µ—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç—Ç–∞: x¬≥ + 4x¬≤ –ø—Ä–∏ x = 2",
        options: ["12", "28", "43", "63"],
        correct: 1,
      },
      {
        question: "–ù–∞–º–µ—Ä–µ—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç—Ç–∞: x¬≥ + 4x¬≤ –ø—Ä–∏ x = 3",
        options: ["39", "63", "81", "108"],
        correct: 1,
      },
    ],
  },
};

// -------- –ò–º–∏—Ç–∏—Ä–∞–Ω–æ Markdown —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ (–ø–æ ID) --------
const MD_FALLBACK_BY_ID: Record<string, string> = {
  Calc_Ep23: `
# –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏ —Ñ–æ—Ä–º–∏ –∏ –ø—Ä–∞–≤–∏–ª–æ –Ω–∞ –õ'–û–ø–∏—Ç–∞–ª

–í —Ç–æ–∑–∏ —É—Ä–æ–∫ –ø—Ä–µ–≥–æ–≤–∞—Ä—è–º–µ –∫–ª–∞—Å–∏—á–µ—Å–∫–∏—Ç–µ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏ —Ñ–æ—Ä–º–∏ –∫–∞—Ç–æ \`0/0\` –∏ \`‚àû/‚àû\`,
–∏ –ø–æ–∫–∞–∑–≤–∞–º–µ –∫–æ–≥–∞ –∏ –∫–∞–∫ —Å–µ –ø—Ä–∏–ª–∞–≥–∞ –ø—Ä–∞–≤–∏–ª–æ—Ç–æ –Ω–∞ –õ'–û–ø–∏—Ç–∞–ª.

> **–ò–Ω—Ç—É–∏—Ü–∏—è:** –∞–∫–æ \`f(x)\` –∏ \`g(x)\` –∫–ª–æ–Ω—è—Ç –∫—ä–º 0 (–∏–ª–∏ ‚àû), —á–µ—Å—Ç–æ –≥—Ä–∞–Ω–∏—Ü–∞—Ç–∞ –Ω–∞ \`f/g\` –º–æ–∂–µ –¥–∞ —Å–µ
> ‚Äû—Ä–∞–∑—Ä–µ—à–∏‚Äú —á—Ä–µ–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∏:  
> $$\lim_{x\\to a}\\frac{f(x)}{g(x)} = \lim_{x\\to a}\\frac{f'(x)}{g'(x)},$$
> –ø—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏ —É—Å–ª–æ–≤–∏—è –∑–∞ \`f\` –∏ \`g\` (–¥–∏—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä—É–µ–º–æ—Å—Ç, –Ω–µ–Ω—É–ª–µ–≤ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª –æ–∫–æ–ª–æ —Ç–æ—á–∫–∞—Ç–∞ –∏ —Ç.–Ω.).

## –ë—ä—Ä–∑–∏ –ø—Ä–∏–º–µ—Ä–∏

1. –ü–æ–ª–∏–Ω–æ–º–∏ (–∞–ª–≥–µ–±—Ä–∏—á–Ω–∞ –æ–ø—Ä–æ—Å—Ç—è–≤–∞–Ω–µ):
   $$\\lim_{x\\to 1} \\frac{x^2 - 1}{x - 1}
     = \\lim_{x\\to 1} \\frac{(x-1)(x+1)}{x-1} = 2.$$

2. –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–Ω–∏ –≥—Ä–∞–Ω–∏—Ü–∏:
   $$\\lim_{x\\to 0} \\frac{\\sin x}{x} = 1.$$

3. –õ'–û–ø–∏—Ç–∞–ª (0/0):
   $$\\lim_{x\\to 0} \\frac{\\sin x - x}{x^3}
     = \\lim_{x\\to 0} \\frac{\\cos x - 1}{3x^2}
     = \\lim_{x\\to 0} \\frac{-\\sin x}{6x}
     = \\lim_{x\\to 0} \\frac{-\\cos x}{6} = -\\frac{1}{6}.$$

## –¢–∏–ø–∏—á–Ω–∏ –≥—Ä–µ—à–∫–∏
- –ü—Ä–∏–ª–∞–≥–∞–Ω–µ –Ω–∞ –õ'–û–ø–∏—Ç–∞–ª –±–µ–∑ –¥–∞ –µ –Ω–∞–ª–∏—Ü–µ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Ñ–æ—Ä–º–∞.
- –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –¥–∞ —Å–µ –ø—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—è—Ç –æ—Å—Ç–∞–≤–∞ —Ä–∞–∑–ª–∏—á–µ–Ω –æ—Ç 0 –≤ –æ–∫–æ–ª–Ω–æ—Å—Ç.
- –ó–∞–±—Ä–∞–≤—è–Ω–µ, —á–µ –º–æ–∂–µ –ø—ä—Ä–≤–æ –¥–∞ —Å–µ –æ–ø—Ä–æ—Å—Ç–∏ –∞–ª–≥–µ–±—Ä–∏—á–Ω–æ –∏ **—á–∞–∫ —Ç–æ–≥–∞–≤–∞** –¥–∞ —Å–µ –º–∏—Å–ª–∏ –∑–∞ –õ'–û–ø–∏—Ç–∞–ª.

---

### –ú–∏–Ω–∏ –æ–±–æ–±—â–µ–Ω–∏–µ
- –ü–æ—Ç—ä—Ä—Å–∏ –∞–ª–≥–µ–±—Ä–∏—á–Ω–æ –æ–ø—Ä–æ—Å—Ç—è–≤–∞–Ω–µ.
- –ê–∫–æ –∏–º–∞—à \`0/0\` –∏–ª–∏ \`‚àû/‚àû\`, –ø—Ä–æ–≤–µ—Ä–∏ —É—Å–ª–æ–≤–∏—è—Ç–∞ –∏ –ø—Ä–∏ –Ω—É–∂–¥–∞ –ø—Ä–∏–ª–æ–∂–∏ –õ'–û–ø–∏—Ç–∞–ª.
- –ü–æ–º–Ω–∏ –∫–ª–∞—Å–∏—á–µ—Å–∫–∏—Ç–µ –ª–∏–º–∏—Ç–∏: $\\lim\\limits_{x\\to 0} \\sin x / x = 1$.
`,
  limits1: `
# –ì—Ä–∞–Ω–∏—Ü–∏ ‚Äî –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –≤—ä–≤–µ–¥–µ–Ω–∏–µ

–ì—Ä–∞–Ω–∏—Ü–∞—Ç–∞ –æ–ø–∏—Å–≤–∞ –∫—ä–º **–∫–æ—è —Å—Ç–æ–π–Ω–æ—Å—Ç** —Å–µ —Å—Ç—Ä–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞, –∫–æ–≥–∞—Ç–æ \`x\` —Å–µ –¥–æ–±–ª–∏–∂–∞–≤–∞ –¥–æ –¥–∞–¥–µ–Ω–∞ —Ç–æ—á–∫–∞.

## –î–µ—Ñ–∏–Ω–∏—Ü–∏—è (–∏–¥–µ—è)
–ö–∞–∑–≤–∞–º–µ, —á–µ $$\\lim_{x\\to a} f(x) = L,$$ –∞–∫–æ –º–æ–∂–µ–º –¥–∞ –Ω–∞–ø—Ä–∞–≤–∏–º $f(x)$ **—Ç–æ–ª–∫–æ–≤–∞ –±–ª–∏–∑–æ** –¥–æ $L$, –∫–æ–ª–∫–æ—Ç–æ –ø–æ–∂–µ–ª–∞–µ–º, –∫–∞—Ç–æ –≤–∑–µ–º–µ–º $x$ **–¥–æ—Å—Ç–∞—Ç—ä—á–Ω–æ –±–ª–∏–∑–æ** –¥–æ $a$.

## –ü—Ä–∏–º–µ—Ä–∏
- $$\\lim_{x\\to 1} (3x+2) = 5.$$
- $$\\lim_{x\\to 0} \\frac{\\sin x}{x} = 1.$$

## –°–≤–æ–π—Å—Ç–≤–∞
- –õ–∏–Ω–µ–π–Ω–æ—Å—Ç: $$\\lim (af + bg) = a\\lim f + b\\lim g.$$
- –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ/—á–∞—Å—Ç–Ω–æ: $$\\lim (fg) = (\\lim f)(\\lim g), \\quad
\\lim (f/g) = (\\lim f)/(\\lim g),\\ g\\neq 0.$$

> **–°—ä–≤–µ—Ç:** –∞–∫–æ –º–æ–∂–µ—à ‚Äî –æ–ø—Ä–æ—Å—Ç–∏ –ø—ä—Ä–≤–æ –∞–ª–≥–µ–±—Ä–∏—á–Ω–æ.

---
`,
};

// fallback –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ
const DEFAULT_MD = `
# –î–æ–±—Ä–µ –¥–æ—à—ä–ª –≤ —É—Ä–æ–∫–∞ üëã

–¢–æ–≤–∞ –µ –≤—Ä–µ–º–µ–Ω–µ–Ω markdown (–∏–º–∏—Ç–∞—Ü–∏—è). –ò—Å—Ç–∏–Ω—Å–∫–æ—Ç–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ —â–µ –±—ä–¥–µ –¥–æ–±–∞–≤–µ–Ω–æ —Å–∫–æ—Ä–æ.

- –ü–æ–¥–¥—ä—Ä–∂–∞–º–µ **–∑–∞–≥–ª–∞–≤–∏—è**, —Å–ø–∏—Å—ä—Ü–∏ –∏ —Ñ–æ—Ä–º—É–ª–∏.
- –ü—Ä–∏–º–µ—Ä: $a^2 + b^2 = c^2$ –∏
$$\\int_0^1 x^2\\,dx = \\frac{1}{3}.$$
`;

// -------- –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ LaTeX –≤ Markdown --------
type MathBlock = { type: "block" | "inline"; content: string };

function preprocessMarkdown(content: string) {
  const mathBlocks: MathBlock[] = [];
  let processed = content.replace(/\$\$([\s\S]*?)\$\$/g, (_, m) => {
    mathBlocks.push({ type: "block", content: m.trim() });
    return `<<MATH_BLOCK_${mathBlocks.length - 1}>>`;
  });
  processed = processed.replace(/\$([^$]+?)\$/g, (_, m) => {
    mathBlocks.push({ type: "inline", content: m.trim() });
    return `<<MATH_INLINE_${mathBlocks.length - 1}>>`;
  });
  return { processedContent: processed, mathBlocks };
}

function renderProcessedMarkdown(content: string, mathBlocks: MathBlock[]) {
  const parts = content.split(/(<<MATH_(BLOCK|INLINE)_\d+>>)/g);
  return parts.map((part, i) => {
    const m = part.match(/<<MATH_(BLOCK|INLINE)_(\d+)>>/);
    if (m) {
      const type = (m[1].toLowerCase() as "block" | "inline");
      const idx = parseInt(m[2], 10);
      const block = mathBlocks[idx];
      return (
        <MathView
          key={`math-${i}`}
          math={block.content}
          style={type === "block" ? styles.mathBlock : styles.mathInline}
        />
      );
    }
    return (
      <Markdown key={`md-${i}`} style={markdownStyles}>
        {part}
      </Markdown>
    );
  });
}

// -------- –ï–∫—Ä–∞–Ω --------
export default function LessonScreen() {
  const { lessonsId } = useLocalSearchParams<{ lessonsId: string }>();
  const router = useRouter();
  const insets = useSafeAreaInsets();
  const [tab, setTab] = useState(0); // 0 –£—Ä–æ–∫, 1 –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ

  const lesson = useMemo<LessonCfg | null>(() => {
    if (lessonsId && LESSONS[lessonsId]) return LESSONS[lessonsId];
    const first = Object.values(LESSONS)[0];
    return first ?? null;
  }, [lessonsId]);

  // Markdown (–∏–º–∏—Ç–∞—Ü–∏—è)
  const [mdProcessed, setMdProcessed] =
    useState<{ processedContent: string; mathBlocks: MathBlock[] } | null>(null);

  useEffect(() => {
    const key = String(lessonsId);
    const raw =
      (key && MD_FALLBACK_BY_ID[key]) ??
      MD_FALLBACK_BY_ID.limits1 ??
      DEFAULT_MD;
    setMdProcessed(preprocessMarkdown(raw));
  }, [lessonsId]);

  // Exercises
  const [started, setStarted] = useState(false);
  const [qIndex, setQIndex] = useState(0);
  const [selected, setSelected] = useState<number | null>(null);

  const qTotal = lesson?.exercises.length ?? 0;
  const current = lesson?.exercises[qIndex];

  function next() {
    if (!lesson) return;
    if (qIndex + 1 < lesson.exercises.length) {
      setQIndex((i) => i + 1);
      setSelected(null);
    } else {
      setStarted(false);
      setQIndex(0);
      setSelected(null);
    }
  }

  if (!lesson) {
    return (
      <SafeAreaView style={[styles.container, { paddingTop: insets.top }]}>
        <Text style={[Typo.h2, { color: "#fff", padding: 16 }]}>
          –ù—è–º–∞ –Ω–∞–º–µ—Ä–µ–Ω —É—Ä–æ–∫.
        </Text>
        <PrimaryButton label="–ù–∞–∑–∞–¥" onPress={() => router.back()} />
      </SafeAreaView>
    );
  }

  return (
    <SafeAreaView style={[styles.container, { paddingTop: insets.top }]}>
      <LinearGradient
        colors={["#0b1020", "#05070d"]}
        style={{ flex: 1 }}
        start={{ x: 0, y: 0 }}
        end={{ x: 1, y: 1 }}
      >
        <ScrollView contentContainerStyle={{ paddingBottom: 28 }}>
          {/* Tabs */}
          <View style={{ paddingHorizontal: 16, paddingTop: 12 }}>
            <SegmentedPicker
              segments={[
                { key: "lesson", label: "–£—Ä–æ–∫" },       // —è—Å–Ω–æ, –Ω—è–º–∞ –≤–∏–¥–µ–æ
                { key: "exercise", label: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ" },
              ]}
              index={tab}
              onChange={setTab}
              size="md"
            />
          </View>

          {tab === 0 ? (
            // ---------- –£—Ä–æ–∫ ----------
            <View style={styles.section}>
              <Text style={[Typo.h2, styles.title]}>{lesson.title}</Text>
              <View style={styles.card}>
                {mdProcessed
                  ? renderProcessedMarkdown(
                      mdProcessed.processedContent,
                      mdProcessed.mathBlocks
                    )
                  : null}
              </View>
            </View>
          ) : (
            // ---------- –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ ----------
            <View style={styles.section}>
              {!started ? (
                <View
                  style={[
                    styles.card,
                    {
                      alignItems: "center",
                      justifyContent: "center",
                      paddingVertical: 48,
                    },
                  ]}
                >
                  <PrimaryButton
                    label="–ó–∞–ø–æ—á–Ω–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ—Ç–æ"
                    onPress={() => setStarted(true)}
                  />
                </View>
              ) : current ? (
                <>
                  <View style={styles.headerRow}>
                    <Text
                      style={[
                        Typo.caption,
                        { color: (Colors as any)?.muted ?? "#9BA3AF", opacity: 0.9 },
                      ]}
                    >
                      {qIndex + 1} –æ—Ç {qTotal}
                    </Text>
                  </View>

                  <View style={styles.card}>
                    <Text style={[Typo.h4, { color: "#fff", marginBottom: 16 }]}>
                      {current.question}
                    </Text>

                    {current.options.map((opt, i) => {
                      const isSelected = selected === i;
                      return (
                        <Pressable
                          key={i}
                          onPress={() => setSelected(i)}
                          style={[
                            styles.optionRow,
                            isSelected && styles.optionSelected,
                          ]}
                        >
                          <View style={styles.bullet}>
                            <Text style={styles.bulletText}>
                              {String.fromCharCode(65 + i)}
                            </Text>
                          </View>
                          <Text style={styles.optionText}>{opt}</Text>
                        </Pressable>
                      );
                    })}
                  </View>

                  <View style={styles.footerRow}>
                    <SecondaryButton label="–ü—Ä–æ–ø—É—Å–Ω–∏" onPress={next} />
                    <PrimaryButton
                      label="–ù–∞–ø—Ä–µ–¥"
                      onPress={next}
                      disabled={selected === null}
                    />
                  </View>
                </>
              ) : null}
            </View>
          )}
        </ScrollView>
      </LinearGradient>
    </SafeAreaView>
  );
}

// ---------- –°—Ç–∏–ª–æ–≤–µ ----------
const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: "#000" },
  section: { paddingHorizontal: 16, paddingTop: 12 },
  title: { color: "#fff", marginTop: 12, marginBottom: 8 },
  card: {
    backgroundColor: "rgba(20,20,20,0.9)",
    borderRadius: 18,
    padding: 16,
    borderWidth: StyleSheet.hairlineWidth,
    borderColor: "rgba(255,255,255,0.08)",
  },
  headerRow: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginBottom: 8,
    paddingHorizontal: 4,
  },
  footerRow: {
    marginTop: 14,
    flexDirection: "row",
    justifyContent: "space-between",
    gap: 12,
  },
  optionRow: {
    flexDirection: "row",
    alignItems: "center",
    paddingVertical: 12,
    paddingHorizontal: 10,
    borderRadius: 12,
    borderWidth: 1,
    borderColor: "rgba(255,255,255,0.06)",
    marginBottom: 10,
    backgroundColor: "rgba(255,255,255,0.02)",
  },
  optionSelected: {
    borderColor: (Colors as any)?.primary ?? "#FF8A3D",
    backgroundColor: "rgba(255,138,61,0.08)",
  },
  bullet: {
    width: 28,
    height: 28,
    borderRadius: 14,
    alignItems: "center",
    justifyContent: "center",
    marginRight: 12,
    backgroundColor: "rgba(255,255,255,0.04)",
    borderWidth: 1,
    borderColor: "rgba(255,255,255,0.08)",
  },
  bulletText: { color: "#fff", fontWeight: "600" },
  optionText: { color: "#fff", ...Typo.body1 },
  mathBlock: { marginVertical: 10 },
  mathInline: { marginVertical: 2 },
});

// Markdown —Å—Ç–∏–ª –∑–∞ —Ç—ä–º–µ–Ω —Ñ–æ–Ω
const markdownStyles = {
  body: {
    color: "#e9e9e9",
    fontSize: 16,
    lineHeight: 24,
  },
  heading1: { color: "#fff", fontSize: 22, marginBottom: 8 },
  heading2: { color: "#fff", fontSize: 20, marginTop: 12, marginBottom: 6 },
  strong: { fontWeight: "700" },
  em: { fontStyle: "italic" },
} as const;
